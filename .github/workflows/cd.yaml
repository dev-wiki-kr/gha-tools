name: CD

on:
  push:
    branches:
      - "main"

permissions: write-all

env:
  DISCORD_WEBHOOK_ID: ${{ secrets.DISCORD_WEBHOOK_ID }}
  DISCORD_WEBHOOK_TOKEN: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}

jobs:
  set-output:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha }}
    steps:
      - name: Set Outputs
        id: vars
        run: |
          echo "short_sha=${GITHUB_SHA::6} >> $GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    needs: [set-output]
    strategy:
      matrix:
        node-version: [20.x]
    env:
      SHORT_SHA: ${{ needs.set-output.outputs.short_sha }}

    steps:
      - name: Git checkout@v3
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 9.0.6
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Setup npmrc
        run: |
          echo "@dev-wiki-kr:registry=https://npm.pkg.github.com"  >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGES_TOKEN }}" >> .npmrc

      - name: Install dependencies
        run: pnpm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Create release pull request or publish to github package registry
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          publish: pnpm ci:release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
